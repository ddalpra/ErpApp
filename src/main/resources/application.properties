spring.application.name=ErpApp
server.port=18081

## default connection pool
spring.datasource.hikari.connectionTimeout=20000
spring.datasource.hikari.maximumPoolSize=5

## PostgreSQL
spring.datasource.url=jdbc:postgresql://localhost:5433/postgres
spring.datasource.username=postgres
spring.datasource.password=password

# create and drop table, good for testing, production set to none or comment it
spring.jpa.hibernate.ddl-auto=update

# Turn off the Spring Boot banner
spring.main.banner-mode=off

# Reduce logging level. Set logging level to warn
logging.level.root=warn

#REST path 
spring.data.rest.base-path=/api/v1
spring.data.rest.default-page-size=5

# 1. Configurazione del Provider Keycloak (nome arbitrario: 'keycloak')
spring.security.oauth2.client.provider.keycloak.issuer-uri=http://localhost:18080/realms/erpsuite

# 2. Configurazione del Client (il nome del client deve matchare quello creato su Keycloak)
spring.security.oauth2.client.registration.keycloak.client-id=my-spring-client
spring.security.oauth2.client.registration.keycloak.client-secret=04vCGOI0am3dDq1YgIs9e9N4SF2bmRMl
spring.security.oauth2.client.registration.keycloak.client-authentication-method=client_secret_basic
spring.security.oauth2.client.registration.keycloak.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.keycloak.scope=openid,profile,email
# URI di reindirizzamento: deve corrispondere a Valid Redirect URIs su Keycloak
spring.security.oauth2.client.registration.keycloak.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}